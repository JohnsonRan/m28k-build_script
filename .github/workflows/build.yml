name: Build MangoPi M28K

on:
  workflow_dispatch:

jobs:
  build:
    name: Build MangoPi M28K
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash

    steps:
    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        echo WORKDIR="/builder" >> "github.com_ENV"

    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Free disk space
      uses: sbwml/actions@free-disk
      with:
        build-mount-path: /builder

    - name: Install deps
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
        libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
        libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 \
        python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
        uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Compile OpenWrt
      working-directory: /builder
      id: compile
      continue-on-error: true
      run: |
        git clone --depth=1 https://github.com/coolsnowwolf/lede openwrt && cd openwrt
        bash <(curl -sSL https://github.com/JohnsonRan/m28k-build_script/raw/main/diy.sh)
        curl -skLo .config https://github.com/JohnsonRan/m28k-build_script/raw/main/config/m28k.config
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
        make download -j8
        make -j$(nproc)

    - name: Extensive logs after a failed compilation
      working-directory: /builder
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt
        make V=s

    - name: Prepare Firmware Files
      working-directory: /builder
      run: |
        mkdir -p rom
        cp -a openwrt/bin/targets/rockchip/*/*.img.gz rom/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.device }}-openwrt-${{ env.latest_release }}
        path: ${{ env.WORKDIR }}/rom/*

    - name: Create release
      continue-on-error: true
      uses: ncipollo/release-action@v1.14.0
      with:
        name: OpenWrt-${{ env.latest_release }}
        allowUpdates: true
        tag: ${{ env.latest_release }}
        commit: master
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.WORKDIR }}/rom/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 2
